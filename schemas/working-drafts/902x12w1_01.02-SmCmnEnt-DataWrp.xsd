<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xsd:schema xmlns="urn:ccsds:schema:cssm:1.0.0" xmlns:xsd="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:ccsds:schema:cssm:1.0.0" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0.0">
<xsd:include schemaLocation="902x01b1TC1-SmplSchd.xsd"/>		
<xsd:include schemaLocation="902x12w1_01-SmCmnEnt-TLE.xsd"/>
<xsd:include schemaLocation="https://sanaregistry.org/r/ndmxml_qualified/ndmxml-2.0.0-master-2.0.xsd"/>


<!--********************************************************************************************************************** -->
<!-- Define abstract Data Wrapper type                                                                                     -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractDataWrapper" type="AbstractDataWrapperType" abstract="true"/>
	<xsd:complexType name="AbstractDataWrapperType">
	</xsd:complexType>


<!--********************************************************************************************************************** -->
<!-- Define service agreement wrapper classes                                                                              -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractServiceAgreementWrapper" type="AbstractServiceAgreementWrapperType" abstract="true" substitutionGroup="abstractDataWrapper"/>
	<xsd:complexType name="AbstractServiceAgreementWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractDataWrapperType">
				<xsd:attribute name="serviceAgreementID" type="xsd:string" use="required"/>	
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:element name="serviceAgreementWrapper" type="ServiceAgreementWrapperType" substitutionGroup="abstractServiceAgreementWrapper"/>
	<xsd:complexType name="ServiceAgreementWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractServiceAgreementWrapperType">
				<xsd:sequence>
<!--********************************************************************************************************************** -->
<!--  Service agreement should be referenced here once defined as illustrated below.                                       -->
<!-- 					<xsd:element ref="serviceAgreement" minOccurs="1" maxOccurs="1"/>	                           -->
<!--********************************************************************************************************************** -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	

<!--********************************************************************************************************************** -->
<!-- Define report wrapper classes                                                                                         -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractReportWrapper" type="AbstractReportWrapperType" abstract="true" substitutionGroup="abstractDataWrapper"/>
	<xsd:complexType name="AbstractReportWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractDataWrapperType">
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:element name="simpleScheduleWrapper" type="SimpleScheduleWrapperType" substitutionGroup="abstractReportWrapper"/>
	<xsd:complexType name="SimpleScheduleWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractReportWrapperType">
				<xsd:sequence>
					<xsd:element ref="simpleSchedule" minOccurs="1" maxOccurs="1"/>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	

<!--********************************************************************************************************************** -->
<!-- Define abstract data submission wrapper class                                                                         -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractDataSubWrapper" type="AbstractDataSubWrapperType" abstract="true" substitutionGroup="abstractDataWrapper"/>
	<xsd:complexType name="AbstractDataSubWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractDataWrapperType">
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


<!--********************************************************************************************************************** -->
<!-- Define event sequence wrapper classes                                                                                 -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractEventSeqWrapper" type="AbstractEventSeqWrapperType" abstract="true" substitutionGroup="abstractDataSubWrapper"/>
	<xsd:complexType name="AbstractEventSeqWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractDataSubWrapperType">
				<xsd:attribute name="eventSequenceID" type="xsd:string" use="required"/>	
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:element name="eventSeqWrapper" type="EventSeqWrapperType" substitutionGroup="abstractEventSeqWrapper"/>
	<xsd:complexType name="EventSeqWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractEventSeqWrapperType">
				<xsd:sequence>
<!--********************************************************************************************************************** -->
<!--  Event Sequence should be referenced here once defined as illustrated below.                                          -->
<!-- 					<xsd:element ref="eventSequence" minOccurs="1" maxOccurs="1"/>	                                   -->
<!--********************************************************************************************************************** -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


<!--********************************************************************************************************************** -->
<!-- Define configuration profile wrapper classes                                                                          -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractConfigProfileWrapper" type="AbstractConfigProfileWrapperType" abstract="true" substitutionGroup="abstractDataSubWrapper"/>
	<xsd:complexType name="AbstractConfigProfileWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractDataSubWrapperType">
				<xsd:attribute name="configurationProfileID" type="xsd:string" use="required"/>	
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:element name="configProfileWrapper" type="ConfigProfileWrapperType" substitutionGroup="abstractConfigProfileWrapper"/>
	<xsd:complexType name="ConfigProfileWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractConfigProfileWrapperType">
				<xsd:sequence>
<!--********************************************************************************************************************** -->
<!--  Configuration Profile should be referenced here once defined as illustrated below.                                   -->
<!-- 					<xsd:element ref="configurationProfile" minOccurs="1" maxOccurs="1"/>	                           -->
<!--********************************************************************************************************************** -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


<!--********************************************************************************************************************** -->
<!-- Define DDOR Scan Pattern wrapper classes                                                                          -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractDDORScanPatternWrapper" type="AbstractDDORScanPatternWrapperType" abstract="true" substitutionGroup="abstractDataSubWrapper"/>
	<xsd:complexType name="AbstractDDORScanPatternWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractDataSubWrapperType">
				<xsd:attribute name="ddorScanPatternID" type="xsd:string" use="required"/>	
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:element name="ddorScanPatternWrapper" type="DDORScanPatternWrapperType" substitutionGroup="abstractDDORScanPatternWrapper"/>
	<xsd:complexType name="DDORScanPatternWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractDDORScanPatternWrapperType">
				<xsd:sequence>
<!--********************************************************************************************************************** -->
<!--  DDOR Scan Pattern should be referenced here once defined as illustrated below.                                       -->
<!-- 					<xsd:element ref="ddorScanPattern" minOccurs="1" maxOccurs="1"/>	                               -->
<!--********************************************************************************************************************** -->
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>



<!--********************************************************************************************************************** -->
<!-- Define Service Instance Configuration File wrapper classes                                                            -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractSICFWrapper" type="AbstractSICFWrapperType" abstract="true" substitutionGroup="abstractDataSubWrapper"/>
	<xsd:complexType name="AbstractSICFWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractDataSubWrapperType">
				<xsd:attribute name="sicfID" type="xsd:string" use="required"/>	
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:element name="asciiSICFWrapper" type="AsciiSICFWrapperType" substitutionGroup="abstractTrajDataWrapper"/>
	<xsd:complexType name="AsciiSICFWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractTrajDataWrapperType">
				<xsd:attribute name="sicfFormat" type="xsd:string" use="required" />
				<xsd:attribute name="sicfData" type="xsd:string" use="required" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>



<!--********************************************************************************************************************** -->
<!-- Define trajectory data wrapper classes                                                                                -->
<!--********************************************************************************************************************** -->

	<xsd:element name="abstractTrajDataWrapper" type="AbstractTrajDataWrapperType" abstract="true" substitutionGroup="abstractDataSubWrapper"/>
	<xsd:complexType name="AbstractTrajDataWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractDataSubWrapperType">
				<xsd:attribute name="trajectoryID" type="xsd:string" use="required"/>	
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:element name="oemWrapper" type="OemWrapperType" substitutionGroup="abstractTrajDataWrapper"/>
	<xsd:complexType name="OemWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractTrajDataWrapperType">
				<xsd:sequence>
					<xsd:element ref="oem" minOccurs="1" maxOccurs="1"/>		
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:element name="ommWrapper" type="OmmWrapperType" substitutionGroup="abstractTrajDataWrapper"/>
	<xsd:complexType name="OmmWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractTrajDataWrapperType">
				<xsd:sequence>
					<xsd:element ref="omm" minOccurs="1" maxOccurs="1"/>		
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:element name="opmWrapper" type="OpmWrapperType" substitutionGroup="abstractTrajDataWrapper"/>
	<xsd:complexType name="OpmWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractTrajDataWrapperType">
				<xsd:sequence>
					<xsd:element ref="opm" minOccurs="1" maxOccurs="1"/>		
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>

	<xsd:element name="tleWrapper" type="TleWrapperType" substitutionGroup="abstractTrajDataWrapper"/>
	<xsd:complexType name="TleWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractTrajDataWrapperType">
				<xsd:sequence>
					<xsd:element ref="tle" minOccurs="1" maxOccurs="1"/>		
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:complexType name="TrajDataType">
		<xsd:sequence>
			<xsd:any minOccurs="1" maxOccurs="1"/>
		</xsd:sequence>
	</xsd:complexType>

	<xsd:element name="otherTrajWrapper" type="OtherTrajWrapperType" substitutionGroup="abstractTrajDataWrapper"/>
	<xsd:complexType name="OtherTrajWrapperType">
		<xsd:complexContent>
			<xsd:extension base="AbstractTrajDataWrapperType">
				<xsd:sequence>
					<xsd:element name="trajData" type="TrajDataType" />
				</xsd:sequence>
				<xsd:attribute name="trajFormat" type="xsd:string" use="required" />
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


</xsd:schema>